[{"name":"fun <A, B, C, D> bimap(next: Pair<A, Effect<B>>, fa: (A) -> C, fb: (B) -> D): Pair<C, Effect<D>>","description":"oolong.next.bimap","location":"oolong/oolong.next/bimap.html","searchKeys":["bimap","fun <A, B, C, D> bimap(next: Pair<A, Effect<B>>, fa: (A) -> C, fb: (B) -> D): Pair<C, Effect<D>>","oolong.next.bimap"]},{"name":"fun <A, B> contramap(dispatch: Dispatch<A>, f: (B) -> A): Dispatch<B>","description":"oolong.dispatch.contramap","location":"oolong/oolong.dispatch/contramap.html","searchKeys":["contramap","fun <A, B> contramap(dispatch: Dispatch<A>, f: (B) -> A): Dispatch<B>","oolong.dispatch.contramap"]},{"name":"fun <A, B> map(effect: Effect<A>, f: (A) -> B): Effect<B>","description":"oolong.effect.map","location":"oolong/oolong.effect/map.html","searchKeys":["map","fun <A, B> map(effect: Effect<A>, f: (A) -> B): Effect<B>","oolong.effect.map"]},{"name":"fun <Model, Msg, Props> runtime(init: () -> Pair<Model, Effect<Msg>>, update: (Msg, Model) -> Pair<Model, Effect<Msg>>, view: (Model, Dispatch<Msg>) -> Props, render: (Props) -> Any?, runtimeContext: CoroutineContext = Dispatchers.Default, renderContext: CoroutineContext = Dispatchers.Main, effectContext: CoroutineContext = Dispatchers.Default): Job","description":"oolong.runtime","location":"oolong/oolong/runtime.html","searchKeys":["runtime","fun <Model, Msg, Props> runtime(init: () -> Pair<Model, Effect<Msg>>, update: (Msg, Model) -> Pair<Model, Effect<Msg>>, view: (Model, Dispatch<Msg>) -> Props, render: (Props) -> Any?, runtimeContext: CoroutineContext = Dispatchers.Default, renderContext: CoroutineContext = Dispatchers.Main, effectContext: CoroutineContext = Dispatchers.Default): Job","oolong.runtime"]},{"name":"fun <Model, Msg, Props> view(block: (Model, Dispatch<Msg>) -> Props): (Model, Dispatch<Msg>) -> Props","description":"oolong.view","location":"oolong/oolong/view.html","searchKeys":["view","fun <Model, Msg, Props> view(block: (Model, Dispatch<Msg>) -> Props): (Model, Dispatch<Msg>) -> Props","oolong.view"]},{"name":"fun <Model, Msg> init(block: () -> Pair<Model, Effect<Msg>>): () -> Pair<Model, Effect<Msg>>","description":"oolong.init","location":"oolong/oolong/init.html","searchKeys":["init","fun <Model, Msg> init(block: () -> Pair<Model, Effect<Msg>>): () -> Pair<Model, Effect<Msg>>","oolong.init"]},{"name":"fun <Model, Msg> next(model: Model, effect: Effect<Msg> = none()): Pair<Model, Effect<Msg>>","description":"oolong.next.next","location":"oolong/oolong.next/next.html","searchKeys":["next","fun <Model, Msg> next(model: Model, effect: Effect<Msg> = none()): Pair<Model, Effect<Msg>>","oolong.next.next"]},{"name":"fun <Model, Msg> update(block: (Msg, Model) -> Pair<Model, Effect<Msg>>): (Msg, Model) -> Pair<Model, Effect<Msg>>","description":"oolong.update","location":"oolong/oolong/update.html","searchKeys":["update","fun <Model, Msg> update(block: (Msg, Model) -> Pair<Model, Effect<Msg>>): (Msg, Model) -> Pair<Model, Effect<Msg>>","oolong.update"]},{"name":"fun <Msg> batch(effects: Iterable<Effect<Msg>>): Effect<Msg>","description":"oolong.effect.batch","location":"oolong/oolong.effect/batch.html","searchKeys":["batch","fun <Msg> batch(effects: Iterable<Effect<Msg>>): Effect<Msg>","oolong.effect.batch"]},{"name":"fun <Msg> batch(vararg effects: Effect<Msg>): Effect<Msg>","description":"oolong.effect.batch","location":"oolong/oolong.effect/batch.html","searchKeys":["batch","fun <Msg> batch(vararg effects: Effect<Msg>): Effect<Msg>","oolong.effect.batch"]},{"name":"fun <Msg> effect(block: Effect<Msg>): Effect<Msg>","description":"oolong.effect","location":"oolong/oolong/effect.html","searchKeys":["effect","fun <Msg> effect(block: Effect<Msg>): Effect<Msg>","oolong.effect"]},{"name":"fun <Msg> none(): Effect<Msg>","description":"oolong.effect.none","location":"oolong/oolong.effect/none.html","searchKeys":["none","fun <Msg> none(): Effect<Msg>","oolong.effect.none"]},{"name":"fun <Props> render(block: (Props) -> Any?): (Props) -> Any?","description":"oolong.render","location":"oolong/oolong/render.html","searchKeys":["render","fun <Props> render(block: (Props) -> Any?): (Props) -> Any?","oolong.render"]}]
